# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import test_pb2 as test__pb2


class ImageBuilderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuildImage = channel.unary_unary(
                '/testPackage.ImageBuilder/BuildImage',
                request_serializer=test__pb2.ImageDetails.SerializeToString,
                response_deserializer=test__pb2.FinishedImage.FromString,
                )
        self.DeployInfra = channel.unary_unary(
                '/testPackage.ImageBuilder/DeployInfra',
                request_serializer=test__pb2.InfraDetails.SerializeToString,
                response_deserializer=test__pb2.InfraDetails.FromString,
                )
        self.CreateKeyPair = channel.unary_unary(
                '/testPackage.ImageBuilder/CreateKeyPair',
                request_serializer=test__pb2.KeyDetails.SerializeToString,
                response_deserializer=test__pb2.KeyPair.FromString,
                )


class ImageBuilderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BuildImage(self, request, context):
        """Builds the image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeployInfra(self, request, context):
        """Deploys the image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateKeyPair(self, request, context):
        """Create a keypair
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImageBuilderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuildImage': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildImage,
                    request_deserializer=test__pb2.ImageDetails.FromString,
                    response_serializer=test__pb2.FinishedImage.SerializeToString,
            ),
            'DeployInfra': grpc.unary_unary_rpc_method_handler(
                    servicer.DeployInfra,
                    request_deserializer=test__pb2.InfraDetails.FromString,
                    response_serializer=test__pb2.InfraDetails.SerializeToString,
            ),
            'CreateKeyPair': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateKeyPair,
                    request_deserializer=test__pb2.KeyDetails.FromString,
                    response_serializer=test__pb2.KeyPair.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'testPackage.ImageBuilder', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ImageBuilder(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BuildImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/testPackage.ImageBuilder/BuildImage',
            test__pb2.ImageDetails.SerializeToString,
            test__pb2.FinishedImage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeployInfra(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/testPackage.ImageBuilder/DeployInfra',
            test__pb2.InfraDetails.SerializeToString,
            test__pb2.InfraDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateKeyPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/testPackage.ImageBuilder/CreateKeyPair',
            test__pb2.KeyDetails.SerializeToString,
            test__pb2.KeyPair.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
